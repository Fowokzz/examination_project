---
- name: LAMP setup
  hosts: all
  remote_user: adefowoke 
  become: yes


  tasks:
    - name: Update package manager
      apt: update_cache=yes

    - name: Upgrade System
      apt: upgrade=dist update_cache=yes      

    - name: Install UFW
      apt: name=ufw state=latest 

    - name: Set SSH rule 
      community.general.ufw: rule=allow name=OpenSSH

    - name: UFW - Allow HTTP on port 80 
      community.general.ufw: rule=allow port='80' proto=tcp

    - name: UFW - Allow HTTPS on port 443 
      community.general.ufw: rule=allow port='443' proto=tcp   
      # tags:
      #   - HTTPSconfig



#Apache Configuration
    - name: Install LAMP Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'apache2', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php', 'git' ]

    - name: Create document root
      file:
        path: /var/www/
        state: directory
        owner: www-data
        mode: '0755'

    - name: Set up Apache virtualhost
      template:
        src: ~/laravel.conf
        dest: /etc/apache2/sites-available/laravel.conf
      notify: Reload Apache

    - name: Enable new site
      command: a2ensite laravel.conf
      notify: Reload Apache    

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      when: true
      notify: Reload Apache

    - name: Download MariaDB repo
      ansible.builtin.get_url:
        url: https://downloads.mariadb.com/MariaDB/mariadb_repo_setup
        dest: /home/adefowoke/.ansible/tmp/mariadb_repo_setup

    - name: Setup version 10.7
      ansible.builtin.command:
        cmd: bash /home/adefowoke/.ansible/tmp/mariadb_repo_setup --mariadb-server-version=10.7
      become: yes

    - name: Install MariaDB
      ansible.builtin.apt: name={{item}} state=present
      with_items:
          - mariadb-client
          - mariadb-common
          - mariadb-server
      become: yes

    - name: Install dependency
      ansible.builtin.apt: state=MySQL-python3 state=present

    - name: Start MariaDB
      service: 
        name: mariadb
        enabled: yes
        state: started

    - name: Create App Database
      mysql_db:
        login_unix_socket: /var/run/mysqld/mysqld.sock 
        name: examination
        state: present

    - name: Create MySQL User
      mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: adefowoke
        password: miniproject2
        priv: 'examination.*:ALL'
        host: localhost
        state: present 

    - name: Installing PHP
      apt: name=software-properties-common state=latest

    - name: Repo PHP
      apt_repository: repo="ppa:ondrej/php"

    - name: Updating The Repo
      apt: update_cache=yes

    - name: Installing PHP and It's Dependencies
      apt:
        name: "{{item}}"
        state: latest
        update_cache: true
      loop:
        - php
        - libapache2-mod-php
        - php-mysql
        - php-common
        - php-xml
        - php-fpm
        - php-xmlrpc
        - php-curl
        - php-gd
        - php-imagick
        - php-cli
        - php-dev
        - php-imap
        - php-mbstring
        - php-soap
        - php-zip
        - php-intl
        - php-bcmath
        - php-json

    - name: "Read Checksum"
      shell: curl https://getcomposer.org/download/latest-stable/composer.phar.sha256
      register: composer_checksum

    - name: "Download PHAR file"
      ansible.builtin.get_url:
        url: https://getcomposer.org/download/latest-stable/composer.phar
        dest: /usr/local/bin/composer
        mode: '0755'
        force: yes
        checksum: "sha256:{{ composer_checksum.stdout }}"
      become: yes

    - name: set permissions for composer file
      file:
        path: /usr/local/bin/composer
        mode: a+x
        state: file
        owner: root                  

    - name: Add Composer to global path
      copy: 
        src: /usr/local/bin/composer
        group: root
        mode: '0755'
        owner: root
        dest: /usr/src/composer.phar
        remote_src: yes
      become: yes

    - name: Clone laravel repository
      git:
        repo: https://github.com/f1amy/laravel-realworld-example-app.git
        dest: /var/www/laravel
        clone: yes
        update: yes
      become: yes      

    - name: take ownership of laravel folder
      file:
        path: /var/www/laravel/
        owner: adefowoke
        group: www-data
      become: yes
    
    - name: set permissions for Laravel storage folder
      file:
        path: /var/www/laravel/storage
        state: directory
        recurse: yes
        mode: '0775'
      become: yes

    - name: set permissions for bootstrap folder
      file:
        path: /var/www/laravel/bootsrap/cache
        state: directory
        recurse: yes
        mode: '0775'
      become: yes      

    - name: install laravel dependencies
      shell: composer install --no-interaction
      args:
        chdir: /var/www/laravel

    - name: copy env file
      copy:
        src: /var/www/laravel/.env.example
        remote_src: yes
        dest: /var/www/laravel/.env
        owner: www-data
        group: www-data
        mode: '0644'
      become: yes

    - name: setup laravel
      shell: |
         cd /var/www/laravel
         php artisan key:generate
         php artisan migrate --force
         php artisan db:seed
         php artisan optimize
         php artisan config:clear
         php artisan cache:clear
      become: yes  


#SSL Configuration
                                
    # - name: check parameters
    #   fail:
    #     msg: ssl_certificate_public_content or ssl_certificate_key_content is empty
    #   when: >-
    #     (not ssl_certificate_selfsigned_create) and
    #     (not ssl_certificate_public_content or not ssl_certificate_key_content)   
        
    - name: install openssl
      become: true
      package:
        name: openssl
        state: present
      # when: ssl_certificate_install_openssl

    - name: create certificates directory
      become: true
      vars:
        ssl_certificate_public_path: /etc/ssl/localcerts/server.crt
        ssl_certificate_intermediate_path: /etc/ssl/localcerts/intermediate.crt
        ssl_certificate_bundled_path: /etc/ssl/localcerts/bundled.crt
        ssl_certificate_key_path: /etc/ssl/localcerts/server.key
        ssl_certificate_selfsigned_create: true
        ssl_certificate_selfsigned_subject: |-
          /C=UK/ST=Scotland/L=Dundee/O=OME/CN={{ ansible_fqdn }}
        ssl_certificate_selfsigned_days: '365' 
        ssl_certificate_install_openssl: true
      file:
        path: "{{ item | dirname}}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ ssl_certificate_public_path }}"
        - "{{ ssl_certificate_intermediate_path }}"
        - "{{ ssl_certificate_bundled_path }}"
        - "{{ ssl_certificate_key_path }}"

    - name: generate self-signed SSL certificate  
      become: true
      command: >
        openssl req -new -nodes -x509 -subj
        {{ ssl_certificate_selfsigned_subject }}
        -days {{ ssl_certificate_selfsigned_days }}
        -keyout {{ ssl_certificate_key_path }}
        -out {{ ssl_certificate_public_path }}
        -extensions v3_ca
      args:
        creates: "{{ ssl_certificate_key_path }}"
      when: ssl_certificate_selfsigned_create
      notify: ssl certificate changed
   
      


  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted
        
    - name: Restart mariadb
      service:
        name: mariadb 
        state: restarted
        enabled: yes     

    - name: ssl certificate changed
      debug:
        msg: ssl certificate changed    

    - name: Execute the script
      command: sh /file/-postgresql.sh

          